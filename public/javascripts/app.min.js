var app=angular.module("recipeCreator",["ngMaterial","ngRoute","angular-jwt"]);app.config(["$routeProvider","$locationProvider","$mdThemingProvider","$httpProvider","jwtInterceptorProvider",function(e,t,i,r,n){t.html5Mode(!0),n.tokenGetter=function(){return sessionStorage.getItem("userToken")},r.interceptors.push("jwtInterceptor"),i.theme("default").primaryPalette("amber").accentPalette("yellow"),e.when("/",{templateUrl:"/views/recipes.html",controller:"recipeMake"}).when("/dbsg_calc",{templateUrl:"/views/dbsgcalc.html",controller:"dbsgCalc"}).when("/login",{templateUrl:"/views/login.html",controller:"loginControl"}).when("/register",{templateUrl:"/views/register.html",controller:"registerControl"}).otherwise("/",{templateUrl:"/views/recipes.html",controller:"recipeMake"})}]),app.directive("isMatch",function(){return{require:"ngModel",scope:{otherVal:"=isMatch"},link:function(e,t,i,r){r.$validators.isMatch=function(t){return t===e.otherVal},e.$watch("otherVal",function(){r.$validate()})}}}),app.controller("recipeMake",["$scope","$http","jwtHelper","recipeFunc",function(e,t,i,r){e.user={},e.user.recipetemplate="/views/notloggedin.html",r.getItem(t,e,"grains"),r.getItem(t,e,"hops"),r.getItem(t,e,"yeasts"),e.recipe=new r.recipe(e,r),e.saveRecipe=function(){return r.saveRecipe(t,e,r)},e.addIngredient=function(t,i,n){switch(i){case"grains":var o=new r.newGrain(t);break;case"hops":var o=new r.newHop(t);break;default:var o={}}e.recipe[i].added.push(o),e[n]={}},e.deleteItem=function(t,i){e.recipe[i].added.splice(t,1)},e.$watch(function(){return sessionStorage.getItem("userToken")},function(){if(sessionStorage.getItem("userToken")){var t=i.decodeToken(sessionStorage.getItem("userToken"));e.user=t,e.user.recipetemplate="/private/views/savedrecipes.html"}else e.user={},e.user.recipetemplate="/views/notloggedin.html"})}]),app.controller("loginControl",["$scope","$http","$location",function(e,t,i){e.userLogin=function(){t({method:"post",data:e.user,url:"/loginauth"}).then(function(t){t.data.token&&(sessionStorage.setItem("userToken",t.data.token),e.user={},i.url("/"))},function(t){e.error=t.data,e.user.password=""})}}]),app.controller("registerControl",["$scope","$http","$location",function(e,t,i){e.registerUser=function(){t({method:"post",data:e.user,url:"/register"}).then(function(t){e.user=t.data,i.url("/login")},function(t){e.user=t.data})}}]),app.controller("headerControl",["$scope","jwtHelper",function(e,t){e.user={},e.$watch(function(){return sessionStorage.getItem("userToken")},function(){sessionStorage.getItem("userToken")?(e.user=t.decodeToken(sessionStorage.getItem("userToken")),e.user.login="Logout "+e.user.username,e.user.loginUrl="/"):(e.user={},e.user.login="Login/Register",e.user.loginUrl="/login")}),e.logOut=function(){sessionStorage.removeItem("userToken")}}]),app.controller("savedRecipes",["$scope","$http","recipeFunc",function(e,t,i){e.getSavedRecipes=function(){t({method:"post",url:"/private/recipes/saved"}).then(function(t){e.recipes=t.data,e.recipes.forEach(function(t,r){e.recipes[r]=i.calculateStats(t,i)})})}}]),app.service("recipeFunc",function(){this.totalWeight=function(e){var t=0;return e.forEach(function(e){e.weight>0&&(t+=parseInt(e.weight))}),t},this.totalPPG=function(e,t){var i=0;return e.forEach(function(e,r){i+=Math.round(1e3*(e.PPG-1)*e.weight/t)/1e3}),i},this.efficiencyPPG=function(e,t){if(0===e)return 0;var i=Math.round(e*(t/100)*1e3)/1e3+1;return i>1.5&&(i=1.5),i.toString().length>5&&(i=i.toString().slice(0,5)),i},this.ibu=function(e,t,i,r){if(e.length>0&&t.length>0){var n=0,o=0,a=1.65*Math.pow(125e-6,r-1);return e.forEach(function(e){if(o=e.weight*(e.Alpha_Acid/100)*7490/i,"boil"==e.hopType){var t=(1-Math.pow(2.718281828459045,-.04*e.hopTime))/3.8,r=a*t;n+=r*o}else if("whirlpool"==e.hopType){var r=.1;n+=r*o}}),Math.round(100*n)/100}return 0},this.fg=function(e,t,i){if(t>0){var r=Math.round(1e3*(t-1)*(i/100))/1e3;return r=t-r,r.toString().length>5&&(r=r.toString().slice(0,5)),r}return 0},this.srm=function(e,t){if(e.length>0){var i=0,r=e.forEach(function(e,t){i+=e.lovi*e.weight});return r=i/t,r=Math.round(1.4922*Math.pow(r,.6859)*100)/100,r>50&&(r=50),r}return 0},this.abv=function(e,t,i){return e.length>0?Math.round(76.08*(t-i)/(1.775-t)*(i/.794)*100)/100:0},this.dp=function(e,t){if(e.length>0){var i=0;return e.forEach(function(e,t){i+=e.dp*e.weight}),Math.round(i/t)}return 0},this.newGrain=function(e){this.PPG=e.PPG,this.charandApps=e.charandApps,this.dp=e.dp,this.flavor=e.flavor,this.id=e.id,this.lovi=e.lovi,this.name=e.name,this.weight=e.weight},this.newHop=function(e){this.Alpha_Acid=e.Alpha_Acid,this.Beta_Acid=e.Beta_Acid,this.Name=e.Name,this.Notes=e.Notes,this.Origin=e.Origin,this.Type=e.Type,this.hopTime=e.hopTime,this.hopType=e.hopType,this.weight=e.weight},this.recipe=function(e,t){this.efficiency=65,this.attenuation=70,this.volume=5,this.grains={added:[]},this.hops={added:[],ibu:function(){return t.ibu(e.recipe.hops.added,e.recipe.grains.added,e.recipe.volume,e.recipe.og())}},this.og=function(){return t.efficiencyPPG(t.totalPPG(e.recipe.grains.added,e.recipe.volume),e.recipe.efficiency)},this.fg=function(){return t.fg(e.recipe.grains.added,e.recipe.og(),e.recipe.attenuation)},this.abv=function(){return t.abv(e.recipe.grains.added,e.recipe.og(),e.recipe.fg())},this.srm=function(){return t.srm(e.recipe.grains.added,e.recipe.volume)},this.dp=function(){return t.dp(e.recipe.grains.added,t.totalWeight(e.recipe.grains.added))},this.notes="",this.recipeyeast=e.yeast},this.calculateStats=function(e,t){return e.og=t.efficiencyPPG(t.totalPPG(e.grains.added,e.volume),e.efficiency),e.fg=t.fg(e.grains.added,e.og,e.attenuation),e.abv=t.abv(e.grains.added,e.og,e.fg),e.srm=t.srm(e.grains.added,e.volume),e.dp=t.dp(e.grains.added,t.totalWeight(e.grains.added)),e.hops.ibu=t.ibu(e.hops.added,e.grains.added,e.volume,e.og),e},this.getItem=function(e,t,i){e({method:"GET",url:"/"+i}).then(function(e){t[i]=e.data})},this.saveRecipe=function(e,t,i){console.log("in service");var r={username:t.user.username,name:t.recipe.name,grains:{added:t.recipe.grains.added},efficiency:t.recipe.efficiency,volume:t.recipe.volume,attenuation:t.recipe.attenuation,hops:{added:t.recipe.hops.added},notes:t.notes,yeast:t.yeast};e({method:"post",url:"/private/recipes",data:r}).then(function(e){t.recipe=new i.recipe(t,i)})}}),app.service("PpgCalc",function(){this.calcPpg=function(e){return 1e3*(1+e/100*.04621)/1e3}});
//# sourceMappingURL=data:application/json;base64,