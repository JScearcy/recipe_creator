var app=angular.module("recipeCreator",["ngMaterial","ngRoute","angular-jwt"]);app.config(["$routeProvider","$locationProvider","$mdThemingProvider","$httpProvider","jwtInterceptorProvider",function(e,t,i,n,r){t.html5Mode(!0),r.tokenGetter=function(){return sessionStorage.getItem("userToken")},n.interceptors.push("jwtInterceptor"),i.theme("default").primaryPalette("amber").accentPalette("yellow"),e.when("/",{templateUrl:"/views/recipes.html",controller:"recipeMake"}).when("/dbsg_calc",{templateUrl:"/views/dbsgcalc.html",controller:"dbsgCalc"}).when("/login",{templateUrl:"/views/login.html",controller:"loginControl"}).when("/register",{templateUrl:"/views/register.html",controller:"registerControl"}).otherwise("/",{templateUrl:"/views/recipes.html",controller:"recipeMake"})}]),app.directive("isMatch",function(){return{require:"ngModel",scope:{otherVal:"=isMatch"},link:function(e,t,i,n){n.$validators.isMatch=function(t){return t===e.otherVal},e.$watch("otherVal",function(){n.$validate()})}}}),app.controller("recipeMake",["$scope","$http","jwtHelper","recipeFunc",function(e,t,i,n){e.user={},e.user.recipetemplate="/views/notloggedin.html",n.getItem(t,e,"grains"),n.getItem(t,e,"hops"),n.getItem(t,e,"yeasts"),e.recipe=new n.recipe(e,n),e.clearCurrentRecipe=function(){return new n.clearCurrentRecipe(e,n)},e.saveRecipe=function(){return n.saveRecipe(t,e,n)},e.editRecipe=function(t){return n.editRecipe(t,e,n)},e.addIngredient=function(t,i,r){switch(i){case"grains":var o=new n.newGrain(t);break;case"hops":var o=new n.newHop(t);break;default:return}e.recipe[i].added.push(o),e[r]={}},e.deleteItem=function(t,i){e.recipe[i].added.splice(t,1)},e.$watch(function(){return sessionStorage.getItem("userToken")},function(){if(sessionStorage.getItem("userToken")){var t=i.decodeToken(sessionStorage.getItem("userToken"));e.user=t,e.user.recipetemplate="/private/views/savedrecipes.html"}else e.user={},e.user.recipetemplate="/views/notloggedin.html"})}]),app.controller("loginControl",["$scope","$http","$location",function(e,t,i){e.userLogin=function(){t({method:"post",data:e.user,url:"/loginauth"}).then(function(t){t.data.token&&(sessionStorage.setItem("userToken",t.data.token),e.user={},i.url("/"))},function(t){e.error=t.data,e.user.password=""})}}]),app.controller("registerControl",["$scope","$http","$location",function(e,t,i){e.registerUser=function(){t({method:"post",data:e.user,url:"/register"}).then(function(t){e.user=t.data,i.url("/login")},function(t){e.user=t.data})}}]),app.controller("headerControl",["$scope","jwtHelper",function(e,t){e.user={},e.goToPage=function(e){return e},e.$watch(function(){return sessionStorage.getItem("userToken")},function(){sessionStorage.getItem("userToken")?(e.user=t.decodeToken(sessionStorage.getItem("userToken")),e.user.login="Logout "+e.user.username,e.user.loginUrl="/"):(e.user={},e.user.login="Login/Register",e.user.loginUrl="/login")}),e.logOut=function(){sessionStorage.removeItem("userToken")}}]),app.controller("savedRecipes",["$scope","$http","recipeFunc",function(e,t,i){e.deleteRecipe=function(n){i.deleteRecipe(n._id,t,function(t){e.getSavedRecipes()})},e.getSavedRecipes=function(){return i.getSavedRecipes(e,t,i)}}]),app.controller("dbsgCalc",["$scope","PpgCalc",function(e,t){e.ppgItems=[],e.clearAll=function(){console.log("button clicked"),e.ppgItems=[]},e.addGrain=function(){e.ppgItems.push(new t.newItem(e.newItem,t)),e.newItem={}}}]),app.service("recipeFunc",function(){this.totalWeight=function(e){var t=0;return e.forEach(function(e){e.weight>0&&(t+=parseInt(e.weight))}),t},this.totalPPG=function(e,t){var i=0;return e.forEach(function(e,n){i+=Math.round(1e3*(e.PPG-1)*e.weight/t)/1e3}),i},this.efficiencyPPG=function(e,t){if(0===e)return 0;var i=Math.round(e*(t/100)*1e3)/1e3+1;return i>1.5&&(i=1.5),i.toString().length>5&&(i=i.toString().slice(0,5)),i},this.ibu=function(e,t,i,n){if(e.length>0&&t.length>0){var r=0,o=0,a=1.65*Math.pow(125e-6,n-1);return e.forEach(function(e){if(o=e.weight*(e.Alpha_Acid/100)*7490/i,"Boil"==e.hopType){var t=(1-Math.pow(2.718281828459045,-.04*e.hopTime))/3.8,n=a*t;r+=n*o}else if("Whirlpool"==e.hopType){var n=.1;r+=n*o}}),Math.round(100*r)/100}return 0},this.fg=function(e,t,i){if(t>0){var n=Math.round(1e3*(t-1)*(i/100))/1e3;return n=t-n,n.toString().length>5&&(n=n.toString().slice(0,5)),n}return 0},this.srm=function(e,t){if(e.length>0){var i=0,n=e.forEach(function(e,t){i+=e.lovi*e.weight});return n=i/t,n=Math.round(1.4922*Math.pow(n,.6859)*100)/100,n>50&&(n=50),n}return 0},this.abv=function(e,t,i){return e.length>0?Math.round(76.08*(t-i)/(1.775-t)*(i/.794)*100)/100:0},this.dp=function(e,t){if(e.length>0){var i=0;return e.forEach(function(e,t){i+=e.dp*e.weight}),Math.round(i/t)}return 0},this.newGrain=function(e){this.PPG=e.PPG,this.charandApps=e.charandApps,this.dp=e.dp,this.flavor=e.flavor,this.id=e.id,this.lovi=e.lovi,this.name=e.name,this.weight=e.weight},this.newHop=function(e){this.Alpha_Acid=e.Alpha_Acid,this.Beta_Acid=e.Beta_Acid,this.Name=e.Name,this.Notes=e.Notes,this.Origin=e.Origin,this.Type=e.Type,this.hopTime=e.hopTime,this.hopType=e.hopType,this.weight=e.weight},this.recipe=function(e,t){this.efficiency=65,this.attenuation=75,this.volume=5,this.grains={added:[]},this.hops={added:[],ibu:function(){return t.ibu(e.recipe.hops.added,e.recipe.grains.added,e.recipe.volume,e.recipe.og())}},this.og=function(){return t.efficiencyPPG(t.totalPPG(e.recipe.grains.added,e.recipe.volume),e.recipe.efficiency)},this.fg=function(){return t.fg(e.recipe.grains.added,e.recipe.og(),e.recipe.attenuation)},this.abv=function(){return t.abv(e.recipe.grains.added,e.recipe.og(),e.recipe.fg())},this.srm=function(){return t.srm(e.recipe.grains.added,e.recipe.volume)},this.dp=function(){return t.dp(e.recipe.grains.added,t.totalWeight(e.recipe.grains.added))},this.notes="",this.recipeyeast=e.yeast},this.calculateStats=function(e,t){return e.og=t.efficiencyPPG(t.totalPPG(e.grains.added,e.volume),e.efficiency),e.fg=t.fg(e.grains.added,e.og,e.attenuation),e.abv=t.abv(e.grains.added,e.og,e.fg),e.srm=t.srm(e.grains.added,e.volume),e.dp=t.dp(e.grains.added,t.totalWeight(e.grains.added)),e.hops.ibu=t.ibu(e.hops.added,e.grains.added,e.volume,e.og),e},this.getItem=function(e,t,i){e({method:"GET",url:"/"+i}).then(function(e){t[i]=e.data})},this.saveRecipe=function(e,t,i){var n={username:t.user.username,name:t.recipe.name,grains:{added:t.recipe.grains.added},efficiency:t.recipe.efficiency,volume:t.recipe.volume,attenuation:t.recipe.attenuation,hops:{added:t.recipe.hops.added},notes:t.notes,yeast:t.yeast};e({method:"post",url:"/private/recipes",data:n}).then(function(e){t.recipe=new i.recipe(t,i),t.notes="",t.yeast={}})},this.clearCurrentRecipe=function(e,t){e.recipe=new t.recipe(e,t),e.notes="",e.yeast={}},this.editRecipe=function(e,t,i){t.recipe.name=e.name,t.recipe.efficiency=e.efficiency,t.recipe.attenuation=e.attenuation,t.recipe.volume=e.volume,t.recipe.grains.added=e.grains.added,t.recipe.hops.added=e.hops.added,t.notes=e.notes,t.yeast=e.yeast,t.selectedIndex=0},this.deleteRecipe=function(e,t,i){t({method:"delete",data:{id:e},url:"/private/recipes/delete/",headers:{"Content-Type":"application/json;charset=utf-8"}}).then(function(e){i(e)})},this.getSavedRecipes=function(e,t,i){t({method:"post",url:"/private/recipes/saved"}).then(function(t){e.recipes=t.data,e.recipes.forEach(function(t,n){e.recipes[n]=i.calculateStats(t,i)})})}}),app.service("PpgCalc",function(){this.calcPpg=function(e){return"number"!=typeof e&&(e=0),e=1e3*(1+e/100*.04621)/1e3,e=e.toString().slice(0,5)},this.newItem=function(e,t){this.ppg=t.calcPpg(e.dbfg),this.dbfg=e.dbfg,this.name=e.name}});
//# sourceMappingURL=data:application/json;base64,